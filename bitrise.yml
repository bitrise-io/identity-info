format_version: "3"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - PORT: $PORT
  - AES256_SECRET_KEY: $AES256_SECRET_KEY

workflows:
  up:
    steps:
    - script:
        title: Start server
        inputs:
        - content: |-
            #!/bin/bash
            go run main.go
  test:
    before_run:
    - _install-test-tools
    envs:
    - TEST_PROFILE_PATH: $TEST_PROFILE_PATH
    - TEST_NO_PW_CERTIFICATE_PATH: $TEST_NO_PW_CERTIFICATE_PATH
    - TEST_CERTIFICATE_PATH: $TEST_CERTIFICATE_PATH
    - TEST_CERTIFICATE_PASSWORD: $TEST_CERTIFICATE_PASSWORD
    - TEST_PROFILE_URL: $TEST_PROFILE_URL
    - TEST_CERTIFICATE_URL: $TEST_CERTIFICATE_URL
    - TEST_CERTIFICATE_URL_PASSWORD: $TEST_CERTIFICATE_URL_PASSWORD
    steps:
    - script:
        title: Export go files to test
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            no_vendor_paths="$(go list ./... | grep -v vendor | grep -v 'apis/testing' | grep -v 'apis/toolresults')"
            echo $no_vendor_paths
            envman add --key GOLIST_WITHOUT_VENDOR --value "$no_vendor_paths"
    - script:
        title: Err check
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            errcheck -asserts=true -blank=true $GOLIST_WITHOUT_VENDOR
    - script:
        title: Go lint
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            while read -r line; do
              echo "-> Linting: $line"
              golint_out="$(golint $line)"
              if [[ "${golint_out}" != "" ]] ; then
                echo "=> Golint issues found:"
                echo "${golint_out}"
                exit 1
              fi
            done <<< "$GOLIST_WITHOUT_VENDOR"
    - script:
        title: Go test
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go test ./...

  _install-test-tools:
    steps:
    - script:
        title: Install required testing tools
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            # Check for unhandled errors
            go get -u -v github.com/kisielk/errcheck
            # Go lint
            go get -u -v github.com/golang/lint/golint

  # ----------------------------------------------------------------
  # --- Utility workflows
  godeps-update:
    title: Godeps update
    description: |
      Used for updating bitrise dependencies with godep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            rm -rf ./Godeps
            rm -rf ./vendor
            go get -t -d ./...
            go get -u -v github.com/tools/godep
            go get -u -v github.com/mattn/go-colorable
            go get -u -v github.com/davecgh/go-spew/spew
            go get -u -v github.com/pmezard/go-difflib/difflib
            godep save ./...